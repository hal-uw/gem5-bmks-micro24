#ifndef HIP_H_
#define HIP_H_

//===============================================================================================================================================================================================================200
//    SET_DEVICE HEADER
//===============================================================================================================================================================================================================200

//======================================================================================================================================================150
//    INCLUDE/DEFINE
//======================================================================================================================================================150
#include "hip/hip_runtime.h"                                       // (in library path specified to compiler)

#include <stdio.h>                                      // (in library path known to compiler)          needed by printf

//======================================================================================================================================================150
//    FUNCTION PROTOTYPES
//======================================================================================================================================================150

//====================================================================================================100
//    SET DEVICE
//====================================================================================================100

void setdevice(void) {
  // variables
  int num_devices;
  int device;

  // work
  hipGetDeviceCount(&num_devices);
  if (num_devices > 1) {
                
    // variables
    int max_multiprocessors; 
    int max_device;
    hipDeviceProp_t properties;

    // initialize variables
    max_multiprocessors = 0;
    max_device = 0;
                
    for (device = 0; device < num_devices; device++) {
      hipGetDeviceProperties(&properties, device);
      if (max_multiprocessors < properties.multiProcessorCount) {
        max_multiprocessors = properties.multiProcessorCount;
        max_device = device;
      }
    }
    hipSetDevice(max_device);
  }
}

//====================================================================================================100
//    GET LAST ERROR
//====================================================================================================100

void checkHIPError(const char *msg) {
  hipError_t err = hipGetLastError();
  if( hipSuccess != err) {
    // fprintf(stderr, "Hip error: %s: %s.\n", msg, hipGetErrorString( err) );
    printf("HIP error: %s: %s.\n", msg, hipGetErrorString( err) );
    fflush(NULL);
    exit(EXIT_FAILURE);
  }
}

//===============================================================================================================================================================================================================200
//    END SET_DEVICE HEADER
//===============================================================================================================================================================================================================200

#endif
